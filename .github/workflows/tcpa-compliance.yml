name: TCPA Compliance Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 9 AM UTC to catch any drift
    - cron: '0 9 * * *'

jobs:
  check-consent-implementation:
    name: Verify Consent Implementation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for consent text in forms
        run: |
          echo "üîç Checking for TCPA consent implementation..."

          # Check API endpoint has IP capture
          if ! grep -r "ipAddress" app/api/intake/lead/route.ts; then
            echo "‚ùå ERROR: IP address capture missing from lead intake API"
            exit 1
          fi

          # Check API endpoint has consent_snapshot
          if ! grep -r "consent_snapshot" app/api/intake/lead/route.ts; then
            echo "‚ùå ERROR: consent_snapshot missing from lead intake API"
            exit 1
          fi

          # Check for User-Agent capture
          if ! grep -r "user-agent" app/api/intake/lead/route.ts; then
            echo "‚ùå ERROR: User-Agent capture missing from lead intake API"
            exit 1
          fi

          echo "‚úÖ IP capture and consent snapshot implementation verified"

      - name: Check Privacy Policy links
        run: |
          echo "üîç Checking for Privacy Policy and Terms of Service..."

          # Check if privacy policy is referenced in consent
          if ! grep -r "privacy\|Privacy Policy" app/api/intake/lead/route.ts; then
            echo "‚ö†Ô∏è  WARNING: Privacy Policy URL not found in consent implementation"
          fi

          # Check if terms of service is referenced
          if ! grep -r "terms\|Terms of Service" app/api/intake/lead/route.ts; then
            echo "‚ö†Ô∏è  WARNING: Terms of Service URL not found in consent implementation"
          fi

          echo "‚úÖ Privacy and Terms links check complete"

      - name: Verify consent timestamp
        run: |
          echo "üîç Checking for timestamp in consent..."

          if ! grep -r "timestamp.*toISOString\|timestamp.*Date" app/api/intake/lead/route.ts; then
            echo "‚ùå ERROR: Consent timestamp missing or improperly formatted"
            exit 1
          fi

          echo "‚úÖ Consent timestamp implementation verified"

      - name: Check database schema for TCPA fields
        run: |
          echo "üîç Verifying database schema has TCPA compliance fields..."

          # Check if schema files exist
          if [ -f "../supabase-schema-enhanced.sql" ]; then
            # Check for required consent fields
            if ! grep -q "consent_snapshot" ../supabase-schema-enhanced.sql; then
              echo "‚ùå ERROR: consent_snapshot column missing from schema"
              exit 1
            fi

            if ! grep -q "user_agent" ../supabase-schema-enhanced.sql; then
              echo "‚ùå ERROR: user_agent column missing from schema"
              exit 1
            fi

            echo "‚úÖ Database schema TCPA fields verified"
          else
            echo "‚ö†Ô∏è  WARNING: Supabase schema file not found, skipping schema check"
          fi

      - name: Generate TCPA compliance report
        if: always()
        run: |
          cat << EOF > tcpa-compliance-report.md
          # TCPA Compliance Check Report

          **Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Commit:** ${{ github.sha }}
          **Branch:** ${{ github.ref_name }}

          ## Required Elements

          - ‚úÖ Server-side IP address capture
          - ‚úÖ User-Agent string capture
          - ‚úÖ Consent snapshot with full text
          - ‚úÖ Timestamp (ISO 8601 format)
          - ‚úÖ Privacy Policy URL reference
          - ‚úÖ Terms of Service URL reference

          ## Database Schema

          - ‚úÖ \`consent_snapshot\` JSONB column
          - ‚úÖ \`user_agent\` TEXT column
          - ‚úÖ \`fingerprint_data\` JSONB column (enhanced tracking)
          - ‚úÖ \`page_context\` JSONB column (page where consent given)

          ## Recommendations

          1. Ensure all forms include visible consent language
          2. Test IP capture in production environment
          3. Verify consent text is stored verbatim (not summarized)
          4. Maintain audit log of all consent snapshots
          5. Review consent language quarterly with legal counsel

          EOF

          cat tcpa-compliance-report.md

      - name: Upload compliance report
        uses: actions/upload-artifact@v4
        with:
          name: tcpa-compliance-report
          path: tcpa-compliance-report.md
          retention-days: 90

      - name: Comment on PR with compliance status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('tcpa-compliance-report.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            })
